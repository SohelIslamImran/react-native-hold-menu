{"version":3,"sources":["HoldItem.tsx"],"names":["React","memo","useMemo","TapGestureHandler","LongPressGestureHandler","Animated","measure","runOnJS","useAnimatedGestureHandler","useAnimatedProps","useAnimatedRef","useAnimatedStyle","useSharedValue","withDelay","withTiming","withSequence","withSpring","useAnimatedReaction","Portal","nanoid","Haptics","getTransformOrigin","calculateMenuHeight","HOLD_ITEM_TRANSFORM_DURATION","HOLD_ITEM_SCALE_DOWN_DURATION","HOLD_ITEM_SCALE_DOWN_VALUE","SPRING_CONFIGURATION","WINDOW_HEIGHT","WINDOW_WIDTH","CONTEXT_MENU_STATE","useDeviceOrientation","styles","styleGuide","useInternal","HoldItemComponent","items","bottom","containerStyles","disableMove","menuAnchorPosition","activateOn","hapticFeedback","actionParams","closeOnTap","children","state","menuProps","safeAreaInsets","deviceOrientation","isActive","isAnimationStarted","itemRectY","itemRectX","itemRectWidth","itemRectHeight","itemScale","transformValue","transformOrigin","key","menuHeight","itemsWithSeparator","filter","item","withSeparator","length","isHold","containerRef","hapticResponse","style","selectionAsync","impactAsync","ImpactFeedbackStyle","notificationAsync","NotificationFeedbackType","activateAnimation","ctx","didMeasureLayout","measured","value","pageY","pageX","height","width","position","calculateTransformValue","isAnchorPointTop","includes","tY","topTransform","spacing","bottomTransform","top","setMenuProps","itemHeight","itemWidth","itemY","itemX","anchorPosition","scaleBack","duration","onCompletion","isFinised","isListValid","ACTIVE","scaleHold","scaleTap","canCallActivateFunctions","willActivateWithTap","gestureEvent","onActive","_","context","onFinish","overlayGestureEvent","END","animatedContainerStyle","animateOpacity","opacity","transform","scale","containerStyle","animatedPortalStyle","transformAnimation","zIndex","left","translateY","portalContainerStyle","holdItem","animatedPortalProps","pointerEvents","_state","GestureHandler","handlerChildren","PortalOverlay","portalOverlay","HoldItem"],"mappings":"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","sourcesContent":["import React, { memo, useMemo } from \"react\";\r\nimport { ViewProps } from \"react-native\";\r\n\r\n//#region reanimated & gesture handler\r\nimport {\r\n  TapGestureHandler,\r\n  LongPressGestureHandler,\r\n  TapGestureHandlerGestureEvent,\r\n  LongPressGestureHandlerGestureEvent,\r\n} from \"react-native-gesture-handler\";\r\nimport Animated, {\r\n  measure,\r\n  runOnJS,\r\n  useAnimatedGestureHandler,\r\n  useAnimatedProps,\r\n  useAnimatedRef,\r\n  useAnimatedStyle,\r\n  useSharedValue,\r\n  withDelay,\r\n  withTiming,\r\n  withSequence,\r\n  withSpring,\r\n  useAnimatedReaction,\r\n} from \"react-native-reanimated\";\r\n//#endregion\r\n\r\n//#region dependencies\r\nimport { Portal } from \"@gorhom/portal\";\r\nimport { nanoid } from \"nanoid/non-secure\";\r\nimport * as Haptics from \"expo-haptics\";\r\n//#endregion\r\n\r\n//#region utils & types\r\nimport {\r\n  TransformOriginAnchorPosition,\r\n  getTransformOrigin,\r\n  calculateMenuHeight,\r\n} from \"../../utils/calculations\";\r\nimport {\r\n  HOLD_ITEM_TRANSFORM_DURATION,\r\n  HOLD_ITEM_SCALE_DOWN_DURATION,\r\n  HOLD_ITEM_SCALE_DOWN_VALUE,\r\n  SPRING_CONFIGURATION,\r\n  WINDOW_HEIGHT,\r\n  WINDOW_WIDTH,\r\n  CONTEXT_MENU_STATE,\r\n} from \"../../constants\";\r\nimport { useDeviceOrientation } from \"../../hooks\";\r\nimport styles from \"./styles\";\r\n\r\nimport type { HoldItemProps, GestureHandlerProps } from \"./types\";\r\nimport styleGuide from \"../../styleGuide\";\r\nimport { useInternal } from \"../../hooks\";\r\n//#endregion\r\n\r\ntype Context = { didMeasureLayout: boolean };\r\n\r\nconst HoldItemComponent = ({\r\n  items,\r\n  bottom,\r\n  containerStyles,\r\n  disableMove,\r\n  menuAnchorPosition,\r\n  activateOn,\r\n  hapticFeedback,\r\n  actionParams,\r\n  closeOnTap,\r\n  children,\r\n}: HoldItemProps) => {\r\n  //#region hooks\r\n  const { state, menuProps, safeAreaInsets } = useInternal();\r\n  const deviceOrientation = useDeviceOrientation();\r\n  //#endregion\r\n\r\n  //#region variables\r\n  const isActive = useSharedValue(false);\r\n  const isAnimationStarted = useSharedValue(false);\r\n\r\n  const itemRectY = useSharedValue<number>(0);\r\n  const itemRectX = useSharedValue<number>(0);\r\n  const itemRectWidth = useSharedValue<number>(0);\r\n  const itemRectHeight = useSharedValue<number>(0);\r\n  const itemScale = useSharedValue<number>(1);\r\n  const transformValue = useSharedValue<number>(0);\r\n\r\n  const transformOrigin = useSharedValue<TransformOriginAnchorPosition>(\r\n    menuAnchorPosition || \"top-right\"\r\n  );\r\n\r\n  const key = useMemo(() => `hold-item-${nanoid()}`, []);\r\n  const menuHeight = useMemo(() => {\r\n    const itemsWithSeparator = items.filter((item) => item.withSeparator);\r\n    return calculateMenuHeight(items.length, itemsWithSeparator.length);\r\n  }, [items]);\r\n\r\n  const isHold = !activateOn || activateOn === \"hold\";\r\n  //#endregion\r\n\r\n  //#region refs\r\n  const containerRef = useAnimatedRef<Animated.View>();\r\n  //#endregion\r\n\r\n  //#region functions\r\n  const hapticResponse = () => {\r\n    const style = !hapticFeedback ? \"Medium\" : hapticFeedback;\r\n    switch (style) {\r\n      case \"Selection\":\r\n        Haptics.selectionAsync();\r\n        break;\r\n      case \"Light\":\r\n      case \"Medium\":\r\n      case \"Heavy\":\r\n        Haptics.impactAsync(Haptics.ImpactFeedbackStyle[style]);\r\n        break;\r\n      case \"Success\":\r\n      case \"Warning\":\r\n      case \"Error\":\r\n        Haptics.notificationAsync(Haptics.NotificationFeedbackType[style]);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  //#endregion\r\n\r\n  //#region worklet functions\r\n  const activateAnimation = (ctx: any) => {\r\n    \"worklet\";\r\n    if (!ctx.didMeasureLayout) {\r\n      const measured = measure(containerRef);\r\n\r\n      itemRectY.value = measured.pageY;\r\n      itemRectX.value = measured.pageX;\r\n      itemRectHeight.value = measured.height;\r\n      itemRectWidth.value = measured.width;\r\n\r\n      if (!menuAnchorPosition) {\r\n        const position = getTransformOrigin(\r\n          measured.pageX,\r\n          itemRectWidth.value,\r\n          deviceOrientation === \"portrait\" ? WINDOW_WIDTH : WINDOW_HEIGHT,\r\n          bottom\r\n        );\r\n        transformOrigin.value = position;\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateTransformValue = () => {\r\n    \"worklet\";\r\n\r\n    const height =\r\n      deviceOrientation === \"portrait\" ? WINDOW_HEIGHT : WINDOW_WIDTH;\r\n\r\n    const isAnchorPointTop = transformOrigin.value.includes(\"top\");\r\n\r\n    let tY = 0;\r\n    if (!disableMove) {\r\n      if (isAnchorPointTop) {\r\n        const topTransform =\r\n          itemRectY.value +\r\n          itemRectHeight.value +\r\n          menuHeight +\r\n          styleGuide.spacing +\r\n          (safeAreaInsets?.bottom || 0);\r\n\r\n        tY = topTransform > height ? height - topTransform : 0;\r\n      } else {\r\n        const bottomTransform =\r\n          itemRectY.value - menuHeight - (safeAreaInsets?.top || 0);\r\n        tY =\r\n          bottomTransform < 0 ? -bottomTransform + styleGuide.spacing * 2 : 0;\r\n      }\r\n    }\r\n    return tY;\r\n  };\r\n\r\n  const setMenuProps = () => {\r\n    \"worklet\";\r\n\r\n    menuProps.value = {\r\n      itemHeight: itemRectHeight.value,\r\n      itemWidth: itemRectWidth.value,\r\n      itemY: itemRectY.value,\r\n      itemX: itemRectX.value,\r\n      anchorPosition: transformOrigin.value,\r\n      menuHeight: menuHeight,\r\n      items,\r\n      transformValue: transformValue.value,\r\n      actionParams: actionParams || {},\r\n    };\r\n  };\r\n\r\n  const scaleBack = () => {\r\n    \"worklet\";\r\n    itemScale.value = withTiming(1, {\r\n      duration: HOLD_ITEM_TRANSFORM_DURATION / 2,\r\n    });\r\n  };\r\n\r\n  const onCompletion = (isFinised?: boolean) => {\r\n    \"worklet\";\r\n    const isListValid = items && items.length > 0;\r\n    if (isFinised && isListValid) {\r\n      state.value = CONTEXT_MENU_STATE.ACTIVE;\r\n      isActive.value = true;\r\n      scaleBack();\r\n      if (hapticFeedback !== \"None\") {\r\n        runOnJS(hapticResponse)();\r\n      }\r\n    }\r\n\r\n    isAnimationStarted.value = false;\r\n\r\n    // TODO: Warn user if item list is empty or not given\r\n  };\r\n\r\n  const scaleHold = () => {\r\n    \"worklet\";\r\n    itemScale.value = withTiming(\r\n      HOLD_ITEM_SCALE_DOWN_VALUE,\r\n      { duration: HOLD_ITEM_SCALE_DOWN_DURATION },\r\n      onCompletion\r\n    );\r\n  };\r\n\r\n  const scaleTap = () => {\r\n    \"worklet\";\r\n    isAnimationStarted.value = true;\r\n\r\n    itemScale.value = withSequence(\r\n      withTiming(HOLD_ITEM_SCALE_DOWN_VALUE, {\r\n        duration: HOLD_ITEM_SCALE_DOWN_DURATION,\r\n      }),\r\n      withTiming(\r\n        1,\r\n        {\r\n          duration: HOLD_ITEM_TRANSFORM_DURATION / 2,\r\n        },\r\n        onCompletion\r\n      )\r\n    );\r\n  };\r\n\r\n  /**\r\n   * When use tap activation (\"tap\") and trying to tap multiple times,\r\n   * scale animation is called again despite it is started. This causes a bug.\r\n   * To prevent this, it is better to check is animation already started.\r\n   */\r\n  const canCallActivateFunctions = () => {\r\n    \"worklet\";\r\n    const willActivateWithTap =\r\n      activateOn === \"double-tap\" || activateOn === \"tap\";\r\n\r\n    return (\r\n      (willActivateWithTap && !isAnimationStarted.value) || !willActivateWithTap\r\n    );\r\n  };\r\n  //#endregion\r\n\r\n  //#region gesture events\r\n  const gestureEvent = useAnimatedGestureHandler<\r\n    LongPressGestureHandlerGestureEvent | TapGestureHandlerGestureEvent,\r\n    Context\r\n  >({\r\n    onActive: (_, context) => {\r\n      if (canCallActivateFunctions()) {\r\n        if (!context.didMeasureLayout) {\r\n          activateAnimation(context);\r\n          transformValue.value = calculateTransformValue();\r\n          setMenuProps();\r\n          context.didMeasureLayout = true;\r\n        }\r\n\r\n        if (!isActive.value) {\r\n          if (isHold) {\r\n            scaleHold();\r\n          } else {\r\n            scaleTap();\r\n          }\r\n        }\r\n      }\r\n    },\r\n    onFinish: (_, context) => {\r\n      context.didMeasureLayout = false;\r\n      if (isHold) {\r\n        scaleBack();\r\n      }\r\n    },\r\n  });\r\n\r\n  const overlayGestureEvent = useAnimatedGestureHandler<\r\n    TapGestureHandlerGestureEvent,\r\n    Context\r\n  >({\r\n    onActive: (_) => {\r\n      if (closeOnTap) state.value = CONTEXT_MENU_STATE.END;\r\n    },\r\n  });\r\n  //#endregion\r\n\r\n  //#region animated styles & props\r\n  const animatedContainerStyle = useAnimatedStyle(() => {\r\n    const animateOpacity = () =>\r\n      withDelay(HOLD_ITEM_TRANSFORM_DURATION, withTiming(1, { duration: 0 }));\r\n\r\n    return {\r\n      opacity: isActive.value ? 0 : animateOpacity(),\r\n      transform: [\r\n        {\r\n          scale: isActive.value\r\n            ? withTiming(1, { duration: HOLD_ITEM_TRANSFORM_DURATION })\r\n            : itemScale.value,\r\n        },\r\n      ],\r\n    };\r\n  });\r\n  const containerStyle = React.useMemo(\r\n    () => [containerStyles, animatedContainerStyle],\r\n    [containerStyles, animatedContainerStyle]\r\n  );\r\n\r\n  const animatedPortalStyle = useAnimatedStyle(() => {\r\n    const animateOpacity = () =>\r\n      withDelay(HOLD_ITEM_TRANSFORM_DURATION, withTiming(0, { duration: 0 }));\r\n\r\n    let tY = calculateTransformValue();\r\n    const transformAnimation = () =>\r\n      disableMove\r\n        ? 0\r\n        : isActive.value\r\n        ? withSpring(tY, SPRING_CONFIGURATION)\r\n        : withTiming(-0.1, { duration: HOLD_ITEM_TRANSFORM_DURATION });\r\n\r\n    return {\r\n      zIndex: 10,\r\n      position: \"absolute\",\r\n      top: itemRectY.value,\r\n      left: itemRectX.value,\r\n      width: itemRectWidth.value,\r\n      height: itemRectHeight.value,\r\n      opacity: isActive.value ? 1 : animateOpacity(),\r\n      transform: [\r\n        {\r\n          translateY: transformAnimation(),\r\n        },\r\n        {\r\n          scale: isActive.value\r\n            ? withTiming(1, { duration: HOLD_ITEM_TRANSFORM_DURATION })\r\n            : itemScale.value,\r\n        },\r\n      ],\r\n    };\r\n  });\r\n  const portalContainerStyle = useMemo(\r\n    () => [styles.holdItem, animatedPortalStyle],\r\n    [animatedPortalStyle]\r\n  );\r\n\r\n  const animatedPortalProps = useAnimatedProps<ViewProps>(() => ({\r\n    pointerEvents: isActive.value ? \"auto\" : \"none\",\r\n  }));\r\n  //#endregion\r\n\r\n  //#region animated effects\r\n  useAnimatedReaction(\r\n    () => state.value,\r\n    (_state) => {\r\n      if (_state === CONTEXT_MENU_STATE.END) {\r\n        isActive.value = false;\r\n      }\r\n    }\r\n  );\r\n  //#endregion\r\n\r\n  //#region components\r\n  const GestureHandler = useMemo(() => {\r\n    switch (activateOn) {\r\n      case \"double-tap\":\r\n        return ({ children: handlerChildren }: GestureHandlerProps) => (\r\n          <TapGestureHandler\r\n            numberOfTaps={2}\r\n            onHandlerStateChange={gestureEvent}\r\n          >\r\n            {handlerChildren}\r\n          </TapGestureHandler>\r\n        );\r\n      case \"tap\":\r\n        return ({ children: handlerChildren }: GestureHandlerProps) => (\r\n          <TapGestureHandler\r\n            numberOfTaps={1}\r\n            onHandlerStateChange={gestureEvent}\r\n          >\r\n            {handlerChildren}\r\n          </TapGestureHandler>\r\n        );\r\n      // default is hold\r\n      default:\r\n        return ({ children: handlerChildren }: GestureHandlerProps) => (\r\n          <LongPressGestureHandler\r\n            minDurationMs={150}\r\n            onHandlerStateChange={gestureEvent}\r\n          >\r\n            {handlerChildren}\r\n          </LongPressGestureHandler>\r\n        );\r\n    }\r\n  }, [activateOn, gestureEvent]);\r\n\r\n  const PortalOverlay = useMemo(() => {\r\n    return () => (\r\n      <TapGestureHandler\r\n        numberOfTaps={1}\r\n        onHandlerStateChange={overlayGestureEvent}\r\n      >\r\n        <Animated.View style={styles.portalOverlay} />\r\n      </TapGestureHandler>\r\n    );\r\n  }, [overlayGestureEvent]);\r\n  //#endregion\r\n\r\n  //#region render\r\n  return (\r\n    <>\r\n      <GestureHandler>\r\n        <Animated.View ref={containerRef} style={containerStyle}>\r\n          {children}\r\n        </Animated.View>\r\n      </GestureHandler>\r\n\r\n      <Portal key={key} name={key}>\r\n        <Animated.View\r\n          key={key}\r\n          style={portalContainerStyle}\r\n          animatedProps={animatedPortalProps}\r\n        >\r\n          <PortalOverlay />\r\n          {children}\r\n        </Animated.View>\r\n      </Portal>\r\n    </>\r\n  );\r\n  //#endregion\r\n};\r\n\r\nconst HoldItem = memo(HoldItemComponent);\r\n\r\nexport default HoldItem;\r\n"]}