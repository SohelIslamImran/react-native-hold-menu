{"version":3,"names":["React","memo","Animated","useAnimatedProps","useInternal","Icon","iconComponent","name","theme","AnimatedIcon","createAnimatedComponent","iconProps","color","value"],"sources":["Icon.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\n\r\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\r\nimport { useInternal } from \"../../hooks\";\r\n\r\ntype IconComponentProps = {\r\n  name: string;\r\n  size: number;\r\n  animatedProps: Partial<{ color: string }>;\r\n};\r\n\r\n// Update iconComponent type, React.ComponentClass<IconComponentProps, any>\r\ntype IconProps = {\r\n  iconComponent: any;\r\n  name: string;\r\n};\r\n\r\nconst Icon = ({ iconComponent, name }: IconProps) => {\r\n  const { theme } = useInternal();\r\n  let AnimatedIcon =\r\n    Animated.createAnimatedComponent<IconComponentProps>(iconComponent);\r\n\r\n  const iconProps = useAnimatedProps(() => {\r\n    return {\r\n      color: theme.value === \"light\" ? \"black\" : \"white\",\r\n    };\r\n  }, [theme]);\r\n\r\n  // @ts-ignore\r\n  return <AnimatedIcon name={name} size={18} animatedProps={iconProps} />;\r\n};\r\n\r\nexport default memo(Icon);\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAEA,OAAOC,QAAP,IAAmBC,gBAAnB,QAA2C,yBAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAcA,MAAMC,IAAI,GAAG,QAAwC;EAAA,IAAvC;IAAEC,aAAF;IAAiBC;EAAjB,CAAuC;EACnD,MAAM;IAAEC;EAAF,IAAYJ,WAAW,EAA7B;EACA,IAAIK,YAAY,GACdP,QAAQ,CAACQ,uBAAT,CAAqDJ,aAArD,CADF;EAGA,MAAMK,SAAS,GAAGR,gBAAgB,CAAC,MAAM;IACvC,OAAO;MACLS,KAAK,EAAEJ,KAAK,CAACK,KAAN,KAAgB,OAAhB,GAA0B,OAA1B,GAAoC;IADtC,CAAP;EAGD,CAJiC,EAI/B,CAACL,KAAD,CAJ+B,CAAlC,CALmD,CAWnD;;EACA,oBAAO,oBAAC,YAAD;IAAc,IAAI,EAAED,IAApB;IAA0B,IAAI,EAAE,EAAhC;IAAoC,aAAa,EAAEI;EAAnD,EAAP;AACD,CAbD;;AAeA,4BAAeV,IAAI,CAACI,IAAD,CAAnB"}