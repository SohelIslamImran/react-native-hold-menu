{"version":3,"sources":["Icon.tsx"],"names":["React","memo","Animated","useAnimatedProps","useInternal","Icon","iconComponent","name","theme","AnimatedIcon","createAnimatedComponent","iconProps","color","value"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAEA,OAAOC,QAAP,IAAmBC,gBAAnB,QAA2C,yBAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAcA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAwC;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,WAAW,EAA7B;AACA,MAAIK,YAAY,GAAGP,QAAQ,CAACQ,uBAAT,CACjBJ,aADiB,CAAnB;AAIA,QAAMK,SAAS,GAAGR,gBAAgB,CAAC,MAAM;AACvC,WAAO;AACLS,MAAAA,KAAK,EAAEJ,KAAK,CAACK,KAAN,KAAgB,OAAhB,GAA0B,OAA1B,GAAoC;AADtC,KAAP;AAGD,GAJiC,EAI/B,CAACL,KAAD,CAJ+B,CAAlC;AAMA,sBAAO,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAED,IAApB;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,aAAa,EAAEI;AAAnD,IAAP;AACD,CAbD;;AAeA,4BAAeV,IAAI,CAACI,IAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\r\n\r\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\r\nimport { useInternal } from \"../../hooks\";\r\n\r\ntype IconComponentProps = {\r\n  name: string;\r\n  size: number;\r\n  animatedProps: Partial<{ color: string }>;\r\n};\r\n\r\n// Update iconComponent type, React.ComponentClass<IconComponentProps, any>\r\ntype IconProps = {\r\n  iconComponent: any;\r\n  name: string;\r\n};\r\n\r\nconst Icon = ({ iconComponent, name }: IconProps) => {\r\n  const { theme } = useInternal();\r\n  let AnimatedIcon = Animated.createAnimatedComponent<IconComponentProps>(\r\n    iconComponent\r\n  );\r\n\r\n  const iconProps = useAnimatedProps(() => {\r\n    return {\r\n      color: theme.value === \"light\" ? \"black\" : \"white\",\r\n    };\r\n  }, [theme]);\r\n\r\n  return <AnimatedIcon name={name} size={18} animatedProps={iconProps} />;\r\n};\r\n\r\nexport default memo(Icon);\r\n"]}