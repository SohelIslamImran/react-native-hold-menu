{"version":3,"sources":["useDeviceOrientation.ts"],"names":["getWindowOrientation","width","height","Dimensions","get","useDeviceOrientation","deviceOrientation","setDeviceOrientation","updateState","changeEvent","addEventListener","remove"],"mappings":";;;;;;;AAAA;;AACA;;AAIA,SAASA,oBAAT,GAA6C;AAC3C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBC,wBAAWC,GAAX,CAAe,QAAf,CAA1B;;AACA,SAAOF,MAAM,IAAID,KAAV,GAAkB,UAAlB,GAA+B,WAAtC;AACD;;AAED,SAASI,oBAAT,GAAgC;AAC9B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4C,qBAChDP,oBAAoB,EAD4B,CAAlD;AAIA,wBAAU,MAAM;AACd,aAASQ,WAAT,GAAuB;AACrBD,MAAAA,oBAAoB,CAACP,oBAAoB,EAArB,CAApB;AACD;;AACD,UAAMS,WAAW,GAAGN,wBAAWO,gBAAX,CAA4B,QAA5B,EAAsCF,WAAtC,CAApB,CAJc,CAKd;;;AACA,WAAO,MAAMC,WAAW,CAACE,MAAZ,EAAb;AACD,GAPD,EAOG,EAPH;AASA,SAAOL,iBAAP;AACD;;eAEcD,oB","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Dimensions } from \"react-native\";\r\n\r\ntype Orientation = \"landscape\" | \"portrait\";\r\n\r\nfunction getWindowOrientation(): Orientation {\r\n  const { width, height } = Dimensions.get(\"window\");\r\n  return height >= width ? \"portrait\" : \"landscape\";\r\n}\r\n\r\nfunction useDeviceOrientation() {\r\n  const [deviceOrientation, setDeviceOrientation] = useState<Orientation>(\r\n    getWindowOrientation()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function updateState() {\r\n      setDeviceOrientation(getWindowOrientation());\r\n    }\r\n    const changeEvent = Dimensions.addEventListener(\"change\", updateState);\r\n    // @ts-ignore\r\n    return () => changeEvent.remove();\r\n  }, []);\r\n\r\n  return deviceOrientation;\r\n}\r\n\r\nexport default useDeviceOrientation;\r\n"]}