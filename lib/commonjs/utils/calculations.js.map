{"version":3,"sources":["calculations.ts"],"names":["MenuItemHeight","styleGuide","typography","callout","lineHeight","FONT_SCALE","spacing","calculateMenuHeight","itemLength","separatorCount","menuAnimationAnchor","anchorPoint","itemWidth","itemsWithSeparatorLength","MenuHeight","splittetAnchorName","split","Center1","Center2","TyTop1","TyTop2","TxLeft1","MENU_WIDTH","TxLeft2","beginningTransformations","translateX","translateY","endingTransformations","getTransformOrigin","posX","windowWidth","bottom","distanceToLeft","Math","round","distanceToRight","position","majority","abs","MENU_TRANSFORM_ORIGIN_TOLERENCE"],"mappings":";;;;;;;AAAA;;AACA;;;;AAMO,MAAMA,cAAc,GAAG,MAAM;AAClC;;AACA,SACEC,oBAAWC,UAAX,CAAsBC,OAAtB,CAA8BC,UAA9B,GAA2CC,qBAA3C,GACAJ,oBAAWK,OAAX,GAAqB,GAFvB;AAID,CANM;;;;AAQA,MAAMC,mBAAmB,GAAG,CACjCC,UADiC,EAEjCC,cAFiC,KAG9B;AACH;;AACA,SACET,cAAc,KAAKQ,UAAnB,IACCA,UAAU,GAAG,CADd,IAEAC,cAAc,GAAGR,oBAAWK,OAH9B;AAKD,CAVM;;;;AAoBA,MAAMI,mBAAmB,GAAG,CACjCC,WADiC,EAEjCC,SAFiC,EAGjCJ,UAHiC,EAIjCK,wBAJiC,KAK9B;AACH;;AACA,QAAMC,UAAU,GAAGP,mBAAmB,CAACC,UAAD,EAAaK,wBAAb,CAAtC;AACA,QAAME,kBAA4B,GAAGJ,WAAW,CAACK,KAAZ,CAAkB,GAAlB,CAArC;AAEA,QAAMC,OAAO,GAAGL,SAAhB;AACA,QAAMM,OAAO,GAAG,CAAhB;AAEA,QAAMC,MAAM,GAAG,EAAEL,UAAU,GAAG,CAAf,CAAf;AACA,QAAMM,MAAM,GAAGN,UAAU,GAAG,CAA5B;AAEA,QAAMO,OAAO,GAAIC,wBAAa,CAAd,GAAmB,CAAC,CAApC;AACA,QAAMC,OAAO,GAAID,wBAAa,CAAd,GAAmB,CAAnC;AAEA,SAAO;AACLE,IAAAA,wBAAwB,EAAE;AACxBC,MAAAA,UAAU,EACRV,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,OAA1B,GACI,CAACM,OADL,GAEIN,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,MAA1B,GACAM,OADA,GAEAJ,OANkB;AAOxBS,MAAAA,UAAU,EACRX,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,KAA1B,GACII,MADJ,GAEIJ,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,QAA1B,GACAI,MADA,GAEAD;AAZkB,KADrB;AAeLS,IAAAA,qBAAqB,EAAE;AACrBF,MAAAA,UAAU,EACRV,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,OAA1B,GACI,CAACQ,OADL,GAEIR,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,MAA1B,GACAQ,OADA,GAEAL,OANe;AAOrBQ,MAAAA,UAAU,EACRX,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,KAA1B,GACIK,MADJ,GAEIL,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,QAA1B,GACA,CAACK,MADD,GAEAF;AAZe;AAflB,GAAP;AA8BD,CAjDM;;;;AAmDA,MAAMU,kBAAkB,GAAG,CAChCC,IADgC,EAEhCjB,SAFgC,EAGhCkB,WAHgC,EAIhCC,MAJgC,KAKE;AAClC;;AACA,QAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,GAAGjB,SAAS,GAAG,CAA9B,CAAvB;AACA,QAAMuB,eAAe,GAAGF,IAAI,CAACC,KAAL,CAAWJ,WAAW,GAAGE,cAAzB,CAAxB;AAEA,MAAII,QAAuC,GAAGL,MAAM,GAChD,cADgD,GAEhD,WAFJ;AAIA,QAAMM,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAASN,cAAc,GAAGG,eAA1B,CAAjB;;AAEA,MAAIE,QAAQ,GAAGE,0CAAf,EAAgD;AAC9CH,IAAAA,QAAQ,GAAGL,MAAM,GAAG,eAAH,GAAqB,YAAtC;AACD,GAFD,MAEO,IAAIC,cAAc,GAAGG,eAArB,EAAsC;AAC3CC,IAAAA,QAAQ,GAAGL,MAAM,GAAG,aAAH,GAAmB,UAApC;AACD;;AAED,SAAOK,QAAP;AACD,CAvBM","sourcesContent":["import styleGuide from \"../styleGuide\";\r\nimport {\r\n  MENU_WIDTH,\r\n  MENU_TRANSFORM_ORIGIN_TOLERENCE,\r\n  FONT_SCALE,\r\n} from \"../constants\";\r\n\r\nexport const MenuItemHeight = () => {\r\n  \"worklet\";\r\n  return (\r\n    styleGuide.typography.callout.lineHeight * FONT_SCALE +\r\n    styleGuide.spacing * 2.5\r\n  );\r\n};\r\n\r\nexport const calculateMenuHeight = (\r\n  itemLength: number,\r\n  separatorCount: number\r\n) => {\r\n  \"worklet\";\r\n  return (\r\n    MenuItemHeight() * itemLength +\r\n    (itemLength - 1) +\r\n    separatorCount * styleGuide.spacing\r\n  );\r\n};\r\n\r\nexport type TransformOriginAnchorPosition =\r\n  | \"top-right\"\r\n  | \"top-left\"\r\n  | \"top-center\"\r\n  | \"bottom-right\"\r\n  | \"bottom-left\"\r\n  | \"bottom-center\";\r\n\r\nexport const menuAnimationAnchor = (\r\n  anchorPoint: TransformOriginAnchorPosition,\r\n  itemWidth: number,\r\n  itemLength: number,\r\n  itemsWithSeparatorLength: number\r\n) => {\r\n  \"worklet\";\r\n  const MenuHeight = calculateMenuHeight(itemLength, itemsWithSeparatorLength);\r\n  const splittetAnchorName: string[] = anchorPoint.split(\"-\");\r\n\r\n  const Center1 = itemWidth;\r\n  const Center2 = 0;\r\n\r\n  const TyTop1 = -(MenuHeight / 2);\r\n  const TyTop2 = MenuHeight / 2;\r\n\r\n  const TxLeft1 = (MENU_WIDTH / 2) * -1;\r\n  const TxLeft2 = (MENU_WIDTH / 2) * 1;\r\n\r\n  return {\r\n    beginningTransformations: {\r\n      translateX:\r\n        splittetAnchorName[1] === \"right\"\r\n          ? -TxLeft1\r\n          : splittetAnchorName[1] === \"left\"\r\n          ? TxLeft1\r\n          : Center1,\r\n      translateY:\r\n        splittetAnchorName[0] === \"top\"\r\n          ? TyTop1\r\n          : splittetAnchorName[0] === \"bottom\"\r\n          ? TyTop1\r\n          : Center2,\r\n    },\r\n    endingTransformations: {\r\n      translateX:\r\n        splittetAnchorName[1] === \"right\"\r\n          ? -TxLeft2\r\n          : splittetAnchorName[1] === \"left\"\r\n          ? TxLeft2\r\n          : Center2,\r\n      translateY:\r\n        splittetAnchorName[0] === \"top\"\r\n          ? TyTop2\r\n          : splittetAnchorName[0] === \"bottom\"\r\n          ? -TyTop2\r\n          : Center2,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getTransformOrigin = (\r\n  posX: number,\r\n  itemWidth: number,\r\n  windowWidth: number,\r\n  bottom?: boolean\r\n): TransformOriginAnchorPosition => {\r\n  \"worklet\";\r\n  const distanceToLeft = Math.round(posX + itemWidth / 2);\r\n  const distanceToRight = Math.round(windowWidth - distanceToLeft);\r\n\r\n  let position: TransformOriginAnchorPosition = bottom\r\n    ? \"bottom-right\"\r\n    : \"top-right\";\r\n\r\n  const majority = Math.abs(distanceToLeft - distanceToRight);\r\n\r\n  if (majority < MENU_TRANSFORM_ORIGIN_TOLERENCE) {\r\n    position = bottom ? \"bottom-center\" : \"top-center\";\r\n  } else if (distanceToLeft < distanceToRight) {\r\n    position = bottom ? \"bottom-left\" : \"top-left\";\r\n  }\r\n\r\n  return position;\r\n};\r\n"]}