{"version":3,"names":["Icon","iconComponent","name","theme","useInternal","AnimatedIcon","Animated","createAnimatedComponent","iconProps","useAnimatedProps","color","value","memo"],"sources":["Icon.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\n\r\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\r\nimport { useInternal } from \"../../hooks\";\r\n\r\ntype IconComponentProps = {\r\n  name: string;\r\n  size: number;\r\n  animatedProps: Partial<{ color: string }>;\r\n};\r\n\r\n// Update iconComponent type, React.ComponentClass<IconComponentProps, any>\r\ntype IconProps = {\r\n  iconComponent: any;\r\n  name: string;\r\n};\r\n\r\nconst Icon = ({ iconComponent, name }: IconProps) => {\r\n  const { theme } = useInternal();\r\n  let AnimatedIcon =\r\n    Animated.createAnimatedComponent<IconComponentProps>(iconComponent);\r\n\r\n  const iconProps = useAnimatedProps(() => {\r\n    return {\r\n      color: theme.value === \"light\" ? \"black\" : \"white\",\r\n    };\r\n  }, [theme]);\r\n\r\n  // @ts-ignore\r\n  return <AnimatedIcon name={name} size={18} animatedProps={iconProps} />;\r\n};\r\n\r\nexport default memo(Icon);\r\n"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;AAcA,MAAMA,IAAI,GAAG,QAAwC;EAAA,IAAvC;IAAEC,aAAF;IAAiBC;EAAjB,CAAuC;EACnD,MAAM;IAAEC;EAAF,IAAY,IAAAC,kBAAA,GAAlB;;EACA,IAAIC,YAAY,GACdC,8BAAA,CAASC,uBAAT,CAAqDN,aAArD,CADF;;EAGA,MAAMO,SAAS,GAAG,IAAAC,uCAAA,EAAiB,MAAM;IACvC,OAAO;MACLC,KAAK,EAAEP,KAAK,CAACQ,KAAN,KAAgB,OAAhB,GAA0B,OAA1B,GAAoC;IADtC,CAAP;EAGD,CAJiB,EAIf,CAACR,KAAD,CAJe,CAAlB,CALmD,CAWnD;;EACA,oBAAO,6BAAC,YAAD;IAAc,IAAI,EAAED,IAApB;IAA0B,IAAI,EAAE,EAAhC;IAAoC,aAAa,EAAEM;EAAnD,EAAP;AACD,CAbD;;4BAee,IAAAI,WAAA,EAAKZ,IAAL,C"}