{"version":3,"sources":["Icon.tsx"],"names":["Icon","iconComponent","name","theme","AnimatedIcon","Animated","createAnimatedComponent","iconProps","color","value"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;AAcA,MAAMA,IAAI,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAwC;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAY,yBAAlB;;AACA,MAAIC,YAAY,GAAGC,+BAASC,uBAAT,CACjBL,aADiB,CAAnB;;AAIA,QAAMM,SAAS,GAAG,6CAAiB,MAAM;AACvC,WAAO;AACLC,MAAAA,KAAK,EAAEL,KAAK,CAACM,KAAN,KAAgB,OAAhB,GAA0B,OAA1B,GAAoC;AADtC,KAAP;AAGD,GAJiB,EAIf,CAACN,KAAD,CAJe,CAAlB;AAMA,sBAAO,6BAAC,YAAD;AAAc,IAAA,IAAI,EAAED,IAApB;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,aAAa,EAAEK;AAAnD,IAAP;AACD,CAbD;;4BAee,iBAAKP,IAAL,C","sourcesContent":["import React, { memo } from \"react\";\r\n\r\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\r\nimport { useInternal } from \"../../hooks\";\r\n\r\ntype IconComponentProps = {\r\n  name: string;\r\n  size: number;\r\n  animatedProps: Partial<{ color: string }>;\r\n};\r\n\r\n// Update iconComponent type, React.ComponentClass<IconComponentProps, any>\r\ntype IconProps = {\r\n  iconComponent: any;\r\n  name: string;\r\n};\r\n\r\nconst Icon = ({ iconComponent, name }: IconProps) => {\r\n  const { theme } = useInternal();\r\n  let AnimatedIcon = Animated.createAnimatedComponent<IconComponentProps>(\r\n    iconComponent\r\n  );\r\n\r\n  const iconProps = useAnimatedProps(() => {\r\n    return {\r\n      color: theme.value === \"light\" ? \"black\" : \"white\",\r\n    };\r\n  }, [theme]);\r\n\r\n  return <AnimatedIcon name={name} size={18} animatedProps={iconProps} />;\r\n};\r\n\r\nexport default memo(Icon);\r\n"]}