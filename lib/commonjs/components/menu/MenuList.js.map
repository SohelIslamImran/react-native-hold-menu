{"version":3,"sources":["MenuList.tsx"],"names":["AnimatedView","Animated","createAnimatedComponent","BlurView","MenuListComponent","state","theme","menuProps","itemList","setItemList","React","useState","menuHeight","itemsWithSeparator","value","items","filter","item","withSeparator","length","prevList","messageStyles","translate","anchorPosition","itemWidth","_leftPosition","menuScaleAnimation","CONTEXT_MENU_STATE","ACTIVE","SPRING_CONFIGURATION_MENU","duration","HOLD_ITEM_TRANSFORM_DURATION","opacityAnimation","left","height","opacity","transform","translateX","beginningTransformations","translateY","scale","endingTransformations","animatedInnerContainerStyle","backgroundColor","IS_IOS","animatedProps","tint","setter","_items","styles","menuContainer","StyleSheet","absoluteFillObject","menuInnerContainer","MenuList","memo"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAWA;;AAIA;;AAEA;;AAEA;;AAOA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,YAAY,GAAGC,+BAASC,uBAAT,CAAiCC,kBAAjC,CAArB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAA8B,yBAApC;;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,eAAMC,QAAN,CAAgC,EAAhC,CAAhC;;AAEA,QAAMC,UAAU,GAAG,4CAAgB,MAAM;AACvC,UAAMC,kBAAkB,GAAGN,SAAS,CAACO,KAAV,CAAgBC,KAAhB,CAAsBC,MAAtB,CACxBC,IAAD,IAAUA,IAAI,CAACC,aADU,CAA3B;AAGA,WAAO,uCACLX,SAAS,CAACO,KAAV,CAAgBC,KAAhB,CAAsBI,MADjB,EAELN,kBAAkB,CAACM,MAFd,CAAP;AAID,GARkB,EAQhB,CAACZ,SAAD,CARgB,CAAnB;AASA,QAAMa,QAAQ,GAAG,2CAAgC,EAAhC,CAAjB;AAEA,QAAMC,aAAa,GAAG,6CAAiB,MAAM;AAC3C,UAAMR,kBAAkB,GAAGN,SAAS,CAACO,KAAV,CAAgBC,KAAhB,CAAsBC,MAAtB,CACxBC,IAAD,IAAUA,IAAI,CAACC,aADU,CAA3B;AAIA,UAAMI,SAAS,GAAG,uCAChBf,SAAS,CAACO,KAAV,CAAgBS,cADA,EAEhBhB,SAAS,CAACO,KAAV,CAAgBU,SAFA,EAGhBjB,SAAS,CAACO,KAAV,CAAgBC,KAAhB,CAAsBI,MAHN,EAIhBN,kBAAkB,CAACM,MAJH,CAAlB;;AAOA,UAAMM,aAAa,GAAG,gCAAYlB,SAAZ,CAAtB;;AAEA,UAAMmB,kBAAkB,GAAG,MACzBrB,KAAK,CAACS,KAAN,KAAgBa,8BAAmBC,MAAnC,GACI,uCAAW,CAAX,EAAcC,oCAAd,CADJ,GAEI,uCAAW,CAAX,EAAc;AACZC,MAAAA,QAAQ,EAAEC;AADE,KAAd,CAHN;;AAOA,UAAMC,gBAAgB,GAAG,MACvB,uCAAW3B,KAAK,CAACS,KAAN,KAAgBa,8BAAmBC,MAAnC,GAA4C,CAA5C,GAAgD,CAA3D,EAA8D;AAC5DE,MAAAA,QAAQ,EAAEC;AADkD,KAA9D,CADF;;AAKA,WAAO;AACLE,MAAAA,IAAI,EAAER,aADD;AAELS,MAAAA,MAAM,EAAEtB,UAAU,CAACE,KAFd;AAGLqB,MAAAA,OAAO,EAAEH,gBAAgB,EAHpB;AAILI,MAAAA,SAAS,EAAE,CACT;AAAEC,QAAAA,UAAU,EAAEf,SAAS,CAACgB,wBAAV,CAAmCD;AAAjD,OADS,EAET;AAAEE,QAAAA,UAAU,EAAEjB,SAAS,CAACgB,wBAAV,CAAmCC;AAAjD,OAFS,EAGT;AACEC,QAAAA,KAAK,EAAEd,kBAAkB;AAD3B,OAHS,EAMT;AAAEW,QAAAA,UAAU,EAAEf,SAAS,CAACmB,qBAAV,CAAgCJ;AAA9C,OANS,EAOT;AAAEE,QAAAA,UAAU,EAAEjB,SAAS,CAACmB,qBAAV,CAAgCF;AAA9C,OAPS;AAJN,KAAP;AAcD,GAxCqB,CAAtB;AA0CA,QAAMG,2BAA2B,GAAG,6CAAiB,MAAM;AACzD,WAAO;AACLC,MAAAA,eAAe,EACbrC,KAAK,CAACQ,KAAN,KAAgB,OAAhB,GACI8B,oBACE,0BADF,GAEE,0BAHN,GAIIA,oBACA,iBADA,GAEA;AARD,KAAP;AAUD,GAXmC,EAWjC,CAACtC,KAAD,CAXiC,CAApC;AAaA,QAAMuC,aAAa,GAAG,6CAAiB,MAAM;AAC3C,WAAO;AAAEC,MAAAA,IAAI,EAAExC,KAAK,CAACQ;AAAd,KAAP;AACD,GAFqB,EAEnB,CAACR,KAAD,CAFmB,CAAtB;;AAIA,QAAMyC,MAAM,GAAIhC,KAAD,IAA4B;AACzCN,IAAAA,WAAW,CAACM,KAAD,CAAX;AACAK,IAAAA,QAAQ,CAACN,KAAT,GAAiBC,KAAjB;AACD,GAHD;;AAKA,kDACE,MAAMR,SAAS,CAACO,KAAV,CAAgBC,KADxB,EAEGiC,MAAD,IAAY;AACV,QAAI,CAAC,4BAAUA,MAAV,EAAkB5B,QAAQ,CAACN,KAA3B,CAAL,EAAwC;AACtC,0CAAQiC,MAAR,EAAgBC,MAAhB;AACD;AACF,GANH,EAOE,CAACzC,SAAD,CAPF;AAUA,sBACE,6BAAC,YAAD;AACE,IAAA,SAAS,EAAE,GADb;AAEE,IAAA,aAAa,EAAEsC,aAFjB;AAGE,IAAA,KAAK,EAAE,CAACI,gBAAOC,aAAR,EAAuB7B,aAAvB;AAHT,kBAKE,6BAAC,8BAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACL8B,wBAAWC,kBADN,EAELH,gBAAOI,kBAFF,EAGLX,2BAHK;AADT,kBAOE,6BAAC,kBAAD;AAAW,IAAA,KAAK,EAAElC;AAAlB,IAPF,CALF,CADF;AAiBD,CA3GD;;AA6GA,MAAM8C,QAAQ,gBAAG5C,eAAM6C,IAAN,CAAWnD,iBAAX,CAAjB;;eAEekD,Q","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nimport Animated, {\r\n  runOnJS,\r\n  useAnimatedProps,\r\n  useAnimatedReaction,\r\n  useAnimatedStyle,\r\n  useDerivedValue,\r\n  useSharedValue,\r\n  withSpring,\r\n  withTiming,\r\n} from \"react-native-reanimated\";\r\n\r\nimport {\r\n  calculateMenuHeight,\r\n  menuAnimationAnchor,\r\n} from \"../../utils/calculations\";\r\nimport { BlurView } from \"expo-blur\";\r\n\r\nimport MenuItems from \"./MenuItems\";\r\n\r\nimport {\r\n  SPRING_CONFIGURATION_MENU,\r\n  HOLD_ITEM_TRANSFORM_DURATION,\r\n  IS_IOS,\r\n  CONTEXT_MENU_STATE,\r\n} from \"../../constants\";\r\n\r\nimport styles from \"./styles\";\r\nimport { MenuItemProps } from \"./types\";\r\nimport { useInternal } from \"../../hooks\";\r\nimport { deepEqual } from \"../../utils/validations\";\r\nimport { leftOrRight } from \"./calculations\";\r\n\r\nconst AnimatedView = Animated.createAnimatedComponent(BlurView);\r\n\r\nconst MenuListComponent = () => {\r\n  const { state, theme, menuProps } = useInternal();\r\n\r\n  const [itemList, setItemList] = React.useState<MenuItemProps[]>([]);\r\n\r\n  const menuHeight = useDerivedValue(() => {\r\n    const itemsWithSeparator = menuProps.value.items.filter(\r\n      (item) => item.withSeparator\r\n    );\r\n    return calculateMenuHeight(\r\n      menuProps.value.items.length,\r\n      itemsWithSeparator.length\r\n    );\r\n  }, [menuProps]);\r\n  const prevList = useSharedValue<MenuItemProps[]>([]);\r\n\r\n  const messageStyles = useAnimatedStyle(() => {\r\n    const itemsWithSeparator = menuProps.value.items.filter(\r\n      (item) => item.withSeparator\r\n    );\r\n\r\n    const translate = menuAnimationAnchor(\r\n      menuProps.value.anchorPosition,\r\n      menuProps.value.itemWidth,\r\n      menuProps.value.items.length,\r\n      itemsWithSeparator.length\r\n    );\r\n\r\n    const _leftPosition = leftOrRight(menuProps);\r\n\r\n    const menuScaleAnimation = () =>\r\n      state.value === CONTEXT_MENU_STATE.ACTIVE\r\n        ? withSpring(1, SPRING_CONFIGURATION_MENU)\r\n        : withTiming(0, {\r\n            duration: HOLD_ITEM_TRANSFORM_DURATION,\r\n          });\r\n\r\n    const opacityAnimation = () =>\r\n      withTiming(state.value === CONTEXT_MENU_STATE.ACTIVE ? 1 : 0, {\r\n        duration: HOLD_ITEM_TRANSFORM_DURATION,\r\n      });\r\n\r\n    return {\r\n      left: _leftPosition,\r\n      height: menuHeight.value,\r\n      opacity: opacityAnimation(),\r\n      transform: [\r\n        { translateX: translate.beginningTransformations.translateX },\r\n        { translateY: translate.beginningTransformations.translateY },\r\n        {\r\n          scale: menuScaleAnimation(),\r\n        },\r\n        { translateX: translate.endingTransformations.translateX },\r\n        { translateY: translate.endingTransformations.translateY },\r\n      ],\r\n    };\r\n  });\r\n\r\n  const animatedInnerContainerStyle = useAnimatedStyle(() => {\r\n    return {\r\n      backgroundColor:\r\n        theme.value === \"light\"\r\n          ? IS_IOS\r\n            ? \"rgba(255, 255, 255, .75)\"\r\n            : \"rgba(255, 255, 255, .95)\"\r\n          : IS_IOS\r\n          ? \"rgba(0,0,0,0.5)\"\r\n          : \"rgba(39, 39, 39, .8)\",\r\n    };\r\n  }, [theme]);\r\n\r\n  const animatedProps = useAnimatedProps(() => {\r\n    return { tint: theme.value };\r\n  }, [theme]);\r\n\r\n  const setter = (items: MenuItemProps[]) => {\r\n    setItemList(items);\r\n    prevList.value = items;\r\n  };\r\n\r\n  useAnimatedReaction(\r\n    () => menuProps.value.items,\r\n    (_items) => {\r\n      if (!deepEqual(_items, prevList.value)) {\r\n        runOnJS(setter)(_items);\r\n      }\r\n    },\r\n    [menuProps]\r\n  );\r\n\r\n  return (\r\n    <AnimatedView\r\n      intensity={100}\r\n      animatedProps={animatedProps}\r\n      style={[styles.menuContainer, messageStyles]}\r\n    >\r\n      <Animated.View\r\n        style={[\r\n          StyleSheet.absoluteFillObject,\r\n          styles.menuInnerContainer,\r\n          animatedInnerContainerStyle,\r\n        ]}\r\n      >\r\n        <MenuItems items={itemList} />\r\n      </Animated.View>\r\n    </AnimatedView>\r\n  );\r\n};\r\n\r\nconst MenuList = React.memo(MenuListComponent);\r\n\r\nexport default MenuList;\r\n"]}