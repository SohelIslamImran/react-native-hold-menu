{"version":3,"sources":["Provider.tsx"],"names":["AnimatedIcon","ProviderComponent","children","theme","selectedTheme","iconComponent","safeAreaInsets","backdropProps","Animated","createAnimatedComponent","state","CONTEXT_MENU_STATE","UNDETERMINED","menuProps","itemHeight","itemWidth","itemX","itemY","items","anchorPosition","menuHeight","transformValue","actionParams","value","internalContextVariables","top","bottom","left","right","Provider"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGA;;AAGA;;AAGA;;AAEA;;;;;;;;AATA;AAGA;AAaO,IAAIA,YAAJ;;;AAEP,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,QADyB;AAEzBC,EAAAA,KAAK,EAAEC,aAFkB;AAGzBC,EAAAA,aAHyB;AAIzBC,EAAAA,cAJyB;AAKzB,KAAGC;AALsB,CAAD,KAMG;AAC3B,MAAIF,aAAJ,EAAmB;AACjB,2BAAAL,YAAY,GAAGQ,+BAASC,uBAAT,CAAiCJ,aAAjC,CAAf;AACD;;AAED,QAAMK,KAAK,GAAG,2CACZC,8BAAmBC,YADP,CAAd;AAGA,QAAMT,KAAK,GAAG,2CAAiCC,aAAa,IAAI,OAAlD,CAAd;AACA,QAAMS,SAAS,GAAG,2CAAkC;AAClDC,IAAAA,UAAU,EAAE,CADsC;AAElDC,IAAAA,SAAS,EAAE,CAFuC;AAGlDC,IAAAA,KAAK,EAAE,CAH2C;AAIlDC,IAAAA,KAAK,EAAE,CAJ2C;AAKlDC,IAAAA,KAAK,EAAE,EAL2C;AAMlDC,IAAAA,cAAc,EAAE,YANkC;AAOlDC,IAAAA,UAAU,EAAE,CAPsC;AAQlDC,IAAAA,cAAc,EAAE,CARkC;AASlDC,IAAAA,YAAY,EAAE;AAToC,GAAlC,CAAlB;AAYA,wBAAU,MAAM;AACdnB,IAAAA,KAAK,CAACoB,KAAN,GAAcnB,aAAa,IAAI,OAA/B;AACD,GAFD,EAEG,CAACA,aAAD,CAFH;AAIA,QAAMoB,wBAAwB,GAAG,oBAC/B,OAAO;AACLd,IAAAA,KADK;AAELP,IAAAA,KAFK;AAGLU,IAAAA,SAHK;AAILP,IAAAA,cAAc,EAAEA,cAAc,IAAI;AAChCmB,MAAAA,GAAG,EAAE,CAD2B;AAEhCC,MAAAA,MAAM,EAAE,CAFwB;AAGhCC,MAAAA,IAAI,EAAE,CAH0B;AAIhCC,MAAAA,KAAK,EAAE;AAJyB;AAJ7B,GAAP,CAD+B,EAY/B,CAAClB,KAAD,EAAQP,KAAR,EAAeU,SAAf,EAA0BP,cAA1B,CAZ+B,CAAjC;AAeA,sBACE,6BAAC,yBAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEkB;AAAjC,kBACE,6BAAC,sBAAD,QACGtB,QADH,eAEE,6BAAC,kBAAD,EAAcK,aAAd,CAFF,eAGE,6BAAC,aAAD,OAHF,CADF,CADF;AASD,CAvDD;;AAyDA,MAAMsB,QAAQ,gBAAG,iBAAK5B,iBAAL,CAAjB;eAEe4B,Q","sourcesContent":["import React, { memo, useEffect, useMemo } from \"react\";\r\nimport { PortalProvider } from \"@gorhom/portal\";\r\nimport Animated, { useSharedValue } from \"react-native-reanimated\";\r\n\r\n// Components\r\nimport { Backdrop } from \"../backdrop\";\r\n\r\n// Utils\r\nimport { InternalContext } from \"../../context/internal\";\r\nimport { HoldMenuProviderProps } from \"./types\";\r\nimport { StateProps, Action } from \"./reducer\";\r\nimport { CONTEXT_MENU_STATE } from \"../../constants\";\r\nimport { MenuInternalProps } from \"../menu/types\";\r\nimport Menu from \"../menu\";\r\n\r\nexport interface Store {\r\n  state: StateProps;\r\n  dispatch?: React.Dispatch<Action>;\r\n}\r\n\r\nexport let AnimatedIcon: any;\r\n\r\nconst ProviderComponent = ({\r\n  children,\r\n  theme: selectedTheme,\r\n  iconComponent,\r\n  safeAreaInsets,\r\n  ...backdropProps\r\n}: HoldMenuProviderProps) => {\r\n  if (iconComponent) {\r\n    AnimatedIcon = Animated.createAnimatedComponent(iconComponent);\r\n  }\r\n\r\n  const state = useSharedValue<CONTEXT_MENU_STATE>(\r\n    CONTEXT_MENU_STATE.UNDETERMINED\r\n  );\r\n  const theme = useSharedValue<\"light\" | \"dark\">(selectedTheme || \"light\");\r\n  const menuProps = useSharedValue<MenuInternalProps>({\r\n    itemHeight: 0,\r\n    itemWidth: 0,\r\n    itemX: 0,\r\n    itemY: 0,\r\n    items: [],\r\n    anchorPosition: \"top-center\",\r\n    menuHeight: 0,\r\n    transformValue: 0,\r\n    actionParams: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    theme.value = selectedTheme || \"light\";\r\n  }, [selectedTheme]);\r\n\r\n  const internalContextVariables = useMemo(\r\n    () => ({\r\n      state,\r\n      theme,\r\n      menuProps,\r\n      safeAreaInsets: safeAreaInsets || {\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n    }),\r\n    [state, theme, menuProps, safeAreaInsets]\r\n  );\r\n\r\n  return (\r\n    <InternalContext.Provider value={internalContextVariables}>\r\n      <PortalProvider>\r\n        {children}\r\n        <Backdrop {...backdropProps} />\r\n        <Menu />\r\n      </PortalProvider>\r\n    </InternalContext.Provider>\r\n  );\r\n};\r\n\r\nconst Provider = memo(ProviderComponent);\r\n\r\nexport default Provider;\r\n"]}