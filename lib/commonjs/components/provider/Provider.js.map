{"version":3,"names":["AnimatedIcon","ProviderComponent","children","theme","selectedTheme","iconComponent","safeAreaInsets","backdropProps","Animated","createAnimatedComponent","state","useSharedValue","CONTEXT_MENU_STATE","UNDETERMINED","menuProps","itemHeight","itemWidth","itemX","itemY","items","anchorPosition","menuHeight","transformValue","actionParams","useEffect","value","internalContextVariables","useMemo","top","bottom","left","right","Provider","memo"],"sources":["Provider.tsx"],"sourcesContent":["import React, { memo, useEffect, useMemo } from \"react\";\r\nimport { PortalProvider } from \"@gorhom/portal\";\r\nimport Animated, { useSharedValue } from \"react-native-reanimated\";\r\n\r\n// Components\r\nimport { Backdrop } from \"../backdrop\";\r\n\r\n// Utils\r\nimport { InternalContext } from \"../../context/internal\";\r\nimport { HoldMenuProviderProps } from \"./types\";\r\nimport { StateProps, Action } from \"./reducer\";\r\nimport { CONTEXT_MENU_STATE } from \"../../constants\";\r\nimport { MenuInternalProps } from \"../menu/types\";\r\nimport Menu from \"../menu\";\r\n\r\nexport interface Store {\r\n  state: StateProps;\r\n  dispatch?: React.Dispatch<Action>;\r\n}\r\n\r\nexport let AnimatedIcon: any;\r\n\r\nconst ProviderComponent = ({\r\n  children,\r\n  theme: selectedTheme,\r\n  iconComponent,\r\n  safeAreaInsets,\r\n  ...backdropProps\r\n}: HoldMenuProviderProps) => {\r\n  if (iconComponent) {\r\n    AnimatedIcon = Animated.createAnimatedComponent(iconComponent);\r\n  }\r\n\r\n  const state = useSharedValue<CONTEXT_MENU_STATE>(\r\n    CONTEXT_MENU_STATE.UNDETERMINED\r\n  );\r\n  const theme = useSharedValue<\"light\" | \"dark\">(selectedTheme || \"light\");\r\n  const menuProps = useSharedValue<MenuInternalProps>({\r\n    itemHeight: 0,\r\n    itemWidth: 0,\r\n    itemX: 0,\r\n    itemY: 0,\r\n    items: [],\r\n    anchorPosition: \"top-center\",\r\n    menuHeight: 0,\r\n    transformValue: 0,\r\n    actionParams: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    theme.value = selectedTheme || \"light\";\r\n  }, [selectedTheme]);\r\n\r\n  const internalContextVariables = useMemo(\r\n    () => ({\r\n      state,\r\n      theme,\r\n      menuProps,\r\n      safeAreaInsets: safeAreaInsets || {\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n    }),\r\n    [state, theme, menuProps, safeAreaInsets]\r\n  );\r\n\r\n  return (\r\n    <InternalContext.Provider value={internalContextVariables}>\r\n      <PortalProvider>\r\n        {children}\r\n        <Backdrop {...backdropProps} />\r\n        <Menu />\r\n      </PortalProvider>\r\n    </InternalContext.Provider>\r\n  );\r\n};\r\n\r\nconst Provider = memo(ProviderComponent);\r\n\r\nexport default Provider;\r\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGA;;AAGA;;AAGA;;AAEA;;;;;;;;AATA;AAGA;AAaO,IAAIA,YAAJ;;;AAEP,MAAMC,iBAAiB,GAAG,QAMG;EAAA,IANF;IACzBC,QADyB;IAEzBC,KAAK,EAAEC,aAFkB;IAGzBC,aAHyB;IAIzBC,cAJyB;IAKzB,GAAGC;EALsB,CAME;;EAC3B,IAAIF,aAAJ,EAAmB;IACjB,uBAAAL,YAAY,GAAGQ,8BAAA,CAASC,uBAAT,CAAiCJ,aAAjC,CAAf;EACD;;EAED,MAAMK,KAAK,GAAG,IAAAC,qCAAA,EACZC,6BAAA,CAAmBC,YADP,CAAd;EAGA,MAAMV,KAAK,GAAG,IAAAQ,qCAAA,EAAiCP,aAAa,IAAI,OAAlD,CAAd;EACA,MAAMU,SAAS,GAAG,IAAAH,qCAAA,EAAkC;IAClDI,UAAU,EAAE,CADsC;IAElDC,SAAS,EAAE,CAFuC;IAGlDC,KAAK,EAAE,CAH2C;IAIlDC,KAAK,EAAE,CAJ2C;IAKlDC,KAAK,EAAE,EAL2C;IAMlDC,cAAc,EAAE,YANkC;IAOlDC,UAAU,EAAE,CAPsC;IAQlDC,cAAc,EAAE,CARkC;IASlDC,YAAY,EAAE;EAToC,CAAlC,CAAlB;EAYA,IAAAC,gBAAA,EAAU,MAAM;IACdrB,KAAK,CAACsB,KAAN,GAAcrB,aAAa,IAAI,OAA/B;EACD,CAFD,EAEG,CAACA,aAAD,CAFH;EAIA,MAAMsB,wBAAwB,GAAG,IAAAC,cAAA,EAC/B,OAAO;IACLjB,KADK;IAELP,KAFK;IAGLW,SAHK;IAILR,cAAc,EAAEA,cAAc,IAAI;MAChCsB,GAAG,EAAE,CAD2B;MAEhCC,MAAM,EAAE,CAFwB;MAGhCC,IAAI,EAAE,CAH0B;MAIhCC,KAAK,EAAE;IAJyB;EAJ7B,CAAP,CAD+B,EAY/B,CAACrB,KAAD,EAAQP,KAAR,EAAeW,SAAf,EAA0BR,cAA1B,CAZ+B,CAAjC;EAeA,oBACE,6BAAC,yBAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAEoB;EAAjC,gBACE,6BAAC,sBAAD,QACGxB,QADH,eAEE,6BAAC,kBAAD,EAAcK,aAAd,CAFF,eAGE,6BAAC,aAAD,OAHF,CADF,CADF;AASD,CAvDD;;AAyDA,MAAMyB,QAAQ,gBAAG,IAAAC,WAAA,EAAKhC,iBAAL,CAAjB;eAEe+B,Q"}